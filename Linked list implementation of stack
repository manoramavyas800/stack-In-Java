package stack;


public class LLimplementation {
    public static class Node{
        Node next;
        int data;
        Node(int data){
            this.data=data;
        }
    }
    public static class LLStack{
        Node head=null;
        int size=0;
        void push(int x){
            Node temp=new Node(x);
            temp.next=head;
            head=temp;
            size++;
        }
         int peek(){
            if(head==null){
                System.out.print("Stack is empty");
                return -1;
            }
            return head.data;
        }
    void displayrec(Node node){
        if(node==null) return;
        displayrec(node.next);
        System.out.print(node.data+" ");
    }
    void display(){
            displayrec(head);
            System.out.println();
    }
    int size(){
        return size;
        }
        int pop(){
            if(head==null){
                System.out.print("Stack is empty");
                return -1;
            }
            int temp=head.data;
            head=head.next;
            size--;
            return temp;
        }
        boolean isEmpty(){
           return head==null;
        }
    }
    public static void main(String[] args) {
        LLStack st=new LLStack();
        st.push(1);
        st.push(2);
        st.push(3);
        st.push(4);
        st.display();
        System.out.println(st.peek());
        st.pop();
        st.display();
        System.out.println(st.size());
        System.out.println(st.isEmpty());
        System.out.println(st.peek());
    }
}
