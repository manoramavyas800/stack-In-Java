package stack;

import java.util.Arrays;
import java.util.Scanner;
import java.util.Stack;
public class BalancedBrackets {
   static int[] consecutiveSub(int[] arr){
       Stack<Integer> st = new Stack<>();
       int n = arr.length;
       for(int i=0;i<n;i++) {
           if (st.isEmpty() || st.peek() != arr[i]) st.push(arr[i]);
          else if (st.peek() == arr[i]) {
               if (i == n - 1 || arr[i] != arr[i + 1]) st.pop();
           }
       }
           int[] res = new int[st.size()];
           int m=res.length;
           for (int j =m-1;j>=0;j--) {
               res[j] = st.pop();
           }
           return res;

   }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        int[] res=consecutiveSub(arr);
        System.out.println(Arrays.toString(res));
        
    }
}
